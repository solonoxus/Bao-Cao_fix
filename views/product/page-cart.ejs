<%- include('../includes/head.ejs') %>

<style>
    .product-checkbox {
        width: 20px;
        height: 20px;
        cursor: pointer;
        margin: 10px;
    }

    .checkbox-column {
        text-align: center;
        vertical-align: middle;
    }

    .checkout-section {
        transition: all 0.3s ease;
        opacity: 0;
        display: none;
    }

    .checkout-section.active {
        opacity: 1;
        display: block;
    }

    .table-shopping-cart th {
        text-align: center;
        padding: 15px;
        font-weight: 600;
        color: #333;
    }

    .product-quantity-controls {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .quantity-btn {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: 1px solid #e6e6e6;
        background: white;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s;
    }

    .quantity-btn:hover {
        background: #717fe0;
        color: white;
    }

    .num-product {
        width: 60px;
        text-align: center;
        border: 1px solid #e6e6e6;
        border-radius: 4px;
        padding: 5px;
        font-size: 14px;
        transition: border-color 0.3s;
    }

    .num-product:focus {
        border-color: #717fe0;
        outline: none;
    }

    .num-product::-webkit-inner-spin-button,
    .num-product::-webkit-outer-spin-button {
        opacity: 1;
        height: 20px;
    }

    .total-amount {
        font-size: 1.2em;
        font-weight: 600;
        color: #717fe0;
    }

    .selected-items-count {
        font-size: 0.9em;
        color: #666;
        margin-top: 10px;
    }

    .stock-warning {
        font-size: 0.8em;
        color: #1eff00;
        margin-top: 5px;
    }

    .empty-cart-message {
        text-align: center;
        padding: 30px;
        font-size: 1.2em;
        color: #666;
        background: #f8f9fa;
        border-radius: 8px;
        margin: 20px 0;
    }
</style>

<body class="animsition">
	
	<%- include('../includes/header.ejs') %>
	<%- include('../includes/cart-r-side.ejs') %>	
	<% if (errorMessage && error == 'true') { %>
		<div class="checkout-message user-message--error m-b-20"><%= errorMessage %></div>
	<% } %>
	<% if(errorMessage && error == 'false'){ %>
		<div class="checkout-message checkout-message--success m-b-20"><%= errorMessage %></div>
	<% } %>
	<!-- Shoping Cart -->
	<div class="bg0 p-t-75 p-b-85">
		<div class="container">
			<div class="row">
				<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
					<div class="m-l-25 m-r--38 m-lr-0-xl">
						<form class="wrap-table-shopping-cart" action="/update-cart" method="POST">
							<table class="table-shopping-cart">
								<tr class="table_head">
									<th></th>
									<th class="column-1">Product</th>
									<th class="column-2"></th>
									<th class="column-3">Price</th>
									<th class="column-4">Quantity</th>
									<th class="column-5">Total</th>
								</tr>

								<% if (products && products.length > 0) { %>
									<% products.forEach(function(product) { %>
										<tr class="table_row">
											<td class="checkbox-column">
												<input type="checkbox" class="product-checkbox" 
													value="<%= product.productId._id %>"
													data-price="<%= product.productId.price %>"
													data-max-quantity="<%= product.productId.quantity %>">
											</td>
											<td class="column-1">
												<div class="how-itemcart1">
													<img src="<%= product.productId.imagePath %>" alt="IMG">
												</div>
											</td>
											<td class="column-2"><%= product.productId.productname %></td>
											<td class="column-3">
												$<span class="num-price"><%= product.productId.price %></span>
											</td>
											<td class="column-4">
												<div class="product-quantity-controls">
													<button type="button" class="quantity-btn btn-num-product-down">
														<i class="fs-16 zmdi zmdi-minus"></i>
													</button>
													<input class="num-product" type="number" name="quantity" 
														value="<%= product.quantity %>"
														data-max-quantity="<%= product.productId.stockQuantity %>"
														min="1">
													<button type="button" class="quantity-btn btn-num-product-up">
														<i class="fs-16 zmdi zmdi-plus"></i>
													</button>
													<input type="hidden" name="productId" value="<%= product.productId._id %>">
												</div>
												<% if (product.productId.stockQuantity < 5) { %>
													<div class="stock-warning">Only <%= product.productId.stockQuantity %> left in stock</div>
												<% } %>
											</td>
											<td class="column-5">
												$<span class="total-prod"><%= (product.productId.price * product.quantity).toFixed(2) %></span>
											</td>
										</tr>
									<% }); %>
								<% } else { %>
									<tr>
										<td colspan="6" class="text-center p-4">
											<div class="empty-cart-message">Your cart is empty</div>
										</td>
									</tr>
								<% } %>

							</table>
							<div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
								<button type="submit" class="flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10">
									Update Cart
								</button>
							</div>
						</form>
					</div>
				</div>

				<div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50 checkout-section">
					<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-lr-0-xl p-lr-15-sm">
						<h4 class="mtext-109 cl2 p-b-30">
							Cart Totals
						</h4>

						<div class="selected-items-count p-b-10"></div>

						<div class="flex-w flex-t bor12 p-b-13">
							<div class="size-208">
								<span class="stext-110 cl2">
									Subtotal:
								</span>
							</div>

							<div class="size-209">
								<span class="mtext-110 cl2 cart-total-price total-amount">
									$0.00
								</span>
							</div>
						</div>

						<div class="flex-w flex-t bor12 p-t-15 p-b-30">
							<div class="size-208 w-full-ssm">
								<span class="stext-110 cl2">
									Shipping:
								</span>
							</div>

							<div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
								<p class="stext-111 cl6 p-t-2">
									Free Shipping
								</p>
							</div>
						</div>

						<form action="/cart/checkout" method="POST" id="checkout-form">
							<div class="flex-w flex-t p-t-27 p-b-33">
								<div class="size-208">
									<span class="mtext-101 cl2">
										Total:
									</span>
								</div>

								<div class="size-209 p-t-1">
									<span class="mtext-110 cl2 cart-total-price total-amount">
										$0.00
									</span>
								</div>
							</div>

							<input type="hidden" name="selectedProducts" id="selected-products">
							
							<div class="flex-w flex-t bor12 p-t-15 p-b-30">
								<div class="size-208 w-full-ssm">
									<span class="stext-110 cl2">
										Shipping Details:
									</span>
								</div>

								<div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
									<div class="p-t-15">
										<div class="bor8 bg0 m-b-12">
											<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="fullname" placeholder="Full Name" required>
										</div>

										<div class="bor8 bg0 m-b-12">
											<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="mobilenumber" placeholder="Phone Number" required>
										</div>

										<div class="bor8 bg0 m-b-12">
											<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="address" placeholder="Address" required>
										</div>
									</div>
								</div>
							</div>

							<div class="payment-method-section">
								<div class="form-group">
									<label>Phương thức thanh toán:</label>
									<select name="paymentMethod" id="paymentMethod" class="form-control">
										<option value="cod">Thanh toán khi nhận hàng (COD)</option>
										<option value="vnpay">Thanh toán qua VNPay</option>
									</select>
								</div>
							</div>

							<button type="submit" class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer">
								Proceed to Checkout
							</button>
						</form>
					</div>
				</div>
				
			</div>
		</div>
	</div>
		
	<%- include('../includes/footer.ejs') %>

	<!-- Back to top -->
	<div class="btn-back-to-top" id="myBtn">
			<span class="symbol-btn-back-to-top">
				<i class="zmdi zmdi-chevron-up"></i>
			</span>
	</div>

	<!-- Include cart.js -->
	<script src="/js/cart.js"></script>

	<%- include('../includes/modal.ejs') %>
<%- include('../includes/end.ejs') %>
<script>
	$(document).ready(function(){
		// Hàm tính tổng tiền các sản phẩm được chọn
		function calculateSelectedTotal() {
			let total = 0;
			$('.product-checkbox:checked').each(function() {
				const price = parseFloat($(this).data('price')) || 0;
				const quantity = parseInt($(this).closest('tr').find('.num-product').val()) || 0;
				total += price * quantity;
			});
			return total;
		}

		// Cập nhật tổng tiền và hiển thị
		function updateTotalDisplay() {
			const total = calculateSelectedTotal();
			$('.cart-total-price').text('$' + total.toFixed(2));
			
			// Cập nhật danh sách sản phẩm được chọn
			const selectedProducts = [];
			$('.product-checkbox:checked').each(function() {
				const productId = $(this).val(); // Sử dụng val() thay vì data('id')
				if (productId) {
					selectedProducts.push(productId);
				}
			});
			$('#selected-products').val(JSON.stringify(selectedProducts));

			// Cập nhật số lượng sản phẩm được chọn
			const selectedCount = selectedProducts.length;
			$('.selected-items-count').text(selectedCount + ' sản phẩm được chọn');

			// Hiển thị/ẩn phần thanh toán
			if(selectedProducts.length > 0) {
				$('.checkout-section').addClass('active');
			} else {
				$('.checkout-section').removeClass('active');
			}
		}

		// Xử lý khi thay đổi checkbox
		$('.product-checkbox').change(function() {
			updateTotalDisplay();
		});

		// Xử lý khi thay đổi số lượng
		$('.btn-num-product-up, .btn-num-product-down').click(function() {
			const input = $(this).siblings('.num-product');
			let newVal;
			if ($(this).hasClass('btn-num-product-up')) {
				newVal = parseInt(input.val()) + 1;
				const maxQuantity = parseInt(input.data('max-quantity')) || 0;
				if (maxQuantity > 0 && newVal > maxQuantity) {
					newVal = maxQuantity;
				}
			} else {
				newVal = Math.max(1, parseInt(input.val()) - 1);
			}
			input.val(newVal);
			updateTotalDisplay();
			
			// Cập nhật tổng tiền của sản phẩm
			const row = $(this).closest('tr');
			const price = parseFloat(row.find('.num-price').text().replace('$', '')) || 0;
			row.find('.total-prod').text('$' + (price * newVal).toFixed(2));
		});

		// Xử lý khi nhập trực tiếp số lượng
		$('.num-product').change(function() {
			const val = Math.max(1, parseInt($(this).val()) || 1);
			const maxQuantity = parseInt($(this).data('max-quantity')) || 0;
			if (maxQuantity > 0 && val > maxQuantity) {
				$(this).val(maxQuantity);
			} else {
				$(this).val(val);
			}
			updateTotalDisplay();
			
			// Cập nhật tổng tiền của sản phẩm
			const row = $(this).closest('tr');
			const price = parseFloat(row.find('.num-price').text().replace('$', '')) || 0;
			row.find('.total-prod').text('$' + (price * val).toFixed(2));
		});

		// Xử lý form checkout
		$('#checkout-form').on('submit', function(e) {
			e.preventDefault();
			
			const selectedProducts = [];
			$('.product-checkbox:checked').each(function() {
				selectedProducts.push($(this).val());
			});
			
			if (selectedProducts.length === 0) {
				alert('Vui lòng chọn ít nhất một sản phẩm để thanh toán');
				return;
			}
			
			$('#selected-products').val(JSON.stringify(selectedProducts));
			
			const formData = $(this).serialize();
			const paymentMethod = $('#paymentMethod').val();
			
			$.ajax({
				url: '/cart/checkout',
				method: 'POST',
				data: formData,
				success: function(response) {
					if (paymentMethod === 'vnpay' && response.success) {
						// Chuyển hướng đến trang thanh toán VNPay
						window.location.href = response.data;
					} else {
						// Nếu thanh toán COD thành công
						if (response.success) {
							// Cập nhật UI
							$('.product-checkbox:checked').closest('tr').remove();
							calculateSelectedTotal();
							updateCartCount();
							
							// Hiển thị thông báo thành công
							alert('Đặt hàng thành công! Mã đơn hàng của bạn là: ' + response.orderCode);
							
							// Làm mới trang sau 1 giây
							setTimeout(function() {
								window.location.reload();
							}, 1000);
						} else {
							alert(response.message || 'Có lỗi xảy ra khi đặt hàng');
						}
					}
				},
				error: function(xhr) {
					const response = xhr.responseJSON;
					alert(response?.message || 'Có lỗi xảy ra khi xử lý đơn hàng');
				}
			});
		});

		// Khởi tạo hiển thị
		updateTotalDisplay();
	});
</script>

<script>
    document.getElementById('checkout-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const paymentMethod = document.getElementById('paymentMethod').value;
        const formData = new FormData(this);
        
        try {
            const response = await fetch('/cart/checkout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(Object.fromEntries(formData))
            });
            
            const result = await response.json();
            
            if (result.success && paymentMethod === 'vnpay') {
                // Gọi API tạo URL thanh toán VNPay
                const vnpayResponse = await fetch('/create_payment_url', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        orderId: result.orderId
                    })
                });
                
                const vnpayResult = await vnpayResponse.json();
                
                if (vnpayResult.code === '00') {
                    // Chuyển hướng đến trang thanh toán VNPay
                    window.location.href = vnpayResult.data;
                } else {
                    alert('Có lỗi xảy ra khi tạo thanh toán!');
                }
            } else {
                // Nếu là COD, reload trang
                window.location.reload();
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Có lỗi xảy ra khi xử lý đơn hàng!');
        }
    });
</script>